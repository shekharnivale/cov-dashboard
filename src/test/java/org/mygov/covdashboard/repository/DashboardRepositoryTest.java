package org.mygov.covdashboard.repository;import org.junit.jupiter.api.BeforeEach;import org.junit.jupiter.api.Test;import org.mygov.covdashboard.model.DashboardEntity;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.boot.autoconfigure.EnableAutoConfiguration;import org.springframework.boot.autoconfigure.domain.EntityScan;import org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest;import org.springframework.dao.EmptyResultDataAccessException;import org.springframework.dao.InvalidDataAccessApiUsageException;import org.springframework.test.context.ActiveProfiles;import java.util.List;import java.util.Optional;import static org.junit.jupiter.api.Assertions.*;import static org.junit.jupiter.api.Assertions.assertEquals;@EntityScan(basePackages={"org.mygov.covdashboard"})@ActiveProfiles(value = "IntegrationTestProfile")@EnableAutoConfiguration@DataJpaTestclass DashboardRepositoryTest {	@Autowired	DashboardRepository repository;	@BeforeEach	public void clearDB() {		repository.deleteAll();	}	@Test	public void test_FindAll() {		List<DashboardEntity> all = repository.findAll();		assertNotNull(all);	}	@Test	public void test_Create() {		DashboardEntity savedEntity = repository.save(DashboardEntity.builder().countryRegion("IN").provinceState("MH").activeCases(50).confirmedCases(10).noOfDeaths(0).build());		assertNotNull(savedEntity);		assertEquals("IN", savedEntity.getCountryRegion(), "Country name");		assertNotNull(savedEntity.getId(), "Generated Id");	}	@Test	public void test_FindById() {		Optional<DashboardEntity> optionalEntity = repository.findById(0L);		assertTrue(optionalEntity.isEmpty(), "Entity with id 0 does not exists");	}	@Test	public void test_FindById_WithException() {		InvalidDataAccessApiUsageException exception = assertThrows(InvalidDataAccessApiUsageException.class, () -> {			repository.findById(null);		});				assertEquals("The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!", exception.getMessage());	}		@Test	public void test_deleteById_WithException() {		EmptyResultDataAccessException exception = assertThrows(EmptyResultDataAccessException.class, () -> {			repository.deleteById(1l);		});		assertEquals("No class org.mygov.covdashboard.model.DashboardEntity entity with id 1 exists!", exception.getMessage());	}	@Test	public void test_deleteById() {		DashboardEntity savedEntity = repository.save(DashboardEntity.builder().countryRegion("IN").provinceState("MH").activeCases(50).confirmedCases(10).noOfDeaths(0).build());		assertNotNull(savedEntity);		assertDoesNotThrow(() -> repository.deleteById(savedEntity.getId()));	}}